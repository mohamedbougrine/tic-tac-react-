{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\BOUGRINE\\\\Desktop\\\\Tic tac Mo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];export function calcWinner(squares){for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return{winner:squares[a],line:lines[i]};}}return null;}export default function calcBestMove(squares,player){var getArrDuplicatedCount=function getArrDuplicatedCount(arr){var count=0;arr.forEach(function(i){if(squares[i]===player){count+=1;}});return count;};var sortedLines=lines.sort(function(a,b){var acount=getArrDuplicatedCount(a);var bcount=getArrDuplicatedCount(b);return bcount-acount;});for(var i=0;i<sortedLines.length;i++){var val=sortedLines[i].find(function(el){if(squares[el]===\"\"){return el+\"\";}return null;});if(!val){continue;}return+val;}return null;}","map":{"version":3,"sources":["C:/Users/BOUGRINE/Desktop/Tic tac Mo/src/helpers/calcSquares.js"],"names":["lines","calcWinner","squares","i","length","a","b","c","winner","line","calcBestMove","player","getArrDuplicatedCount","arr","count","forEach","sortedLines","sort","acount","bcount","val","find","el"],"mappings":"oIAAA,GAAMA,CAAAA,KAAK,CAAG,CACZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CADY,CAEZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFY,CAGZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHY,CAIZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAJY,CAKZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CALY,CAMZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CANY,CAOZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAPY,CAQZ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CARY,CAAd,CAWA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,OAApB,CAA6B,CAClC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,KAAK,CAACI,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,4BAAkBH,KAAK,CAACG,CAAD,CAAvB,IAAOE,CAAP,aAAUC,CAAV,aAAaC,CAAb,aACA,GAAIL,OAAO,CAACG,CAAD,CAAP,EAAcH,OAAO,CAACG,CAAD,CAAP,GAAeH,OAAO,CAACI,CAAD,CAApC,EAA2CJ,OAAO,CAACG,CAAD,CAAP,GAAeH,OAAO,CAACK,CAAD,CAArE,CAA0E,CACxE,MAAO,CAAEC,MAAM,CAAEN,OAAO,CAACG,CAAD,CAAjB,CAAsBI,IAAI,CAAET,KAAK,CAACG,CAAD,CAAjC,CAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CAED,cAAe,SAASO,CAAAA,YAAT,CAAsBR,OAAtB,CAA+BS,MAA/B,CAAuC,CACpD,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,GAAD,CAAS,CACrC,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACAD,GAAG,CAACE,OAAJ,CAAY,SAACZ,CAAD,CAAO,CACjB,GAAID,OAAO,CAACC,CAAD,CAAP,GAAeQ,MAAnB,CAA2B,CACzBG,KAAK,EAAI,CAAT,CACD,CACF,CAJD,EAKA,MAAOA,CAAAA,KAAP,CACD,CARD,CAUA,GAAME,CAAAA,WAAW,CAAGhB,KAAK,CAACiB,IAAN,CAAW,SAACZ,CAAD,CAAIC,CAAJ,CAAU,CACvC,GAAIY,CAAAA,MAAM,CAAGN,qBAAqB,CAACP,CAAD,CAAlC,CACA,GAAIc,CAAAA,MAAM,CAAGP,qBAAqB,CAACN,CAAD,CAAlC,CACA,MAAOa,CAAAA,MAAM,CAAGD,MAAhB,CACD,CAJmB,CAApB,CAMA,IAAK,GAAIf,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGa,WAAW,CAACZ,MAAhC,CAAwCD,CAAC,EAAzC,CAA6C,CAC3C,GAAIiB,CAAAA,GAAG,CAAGJ,WAAW,CAACb,CAAD,CAAX,CAAekB,IAAf,CAAoB,SAACC,EAAD,CAAQ,CACpC,GAAIpB,OAAO,CAACoB,EAAD,CAAP,GAAgB,EAApB,CAAwB,CACtB,MAAOA,CAAAA,EAAE,CAAG,EAAZ,CACD,CACD,MAAO,KAAP,CACD,CALS,CAAV,CAOA,GAAI,CAACF,GAAL,CAAU,CACR,SACD,CACD,MAAO,CAACA,GAAR,CACD,CACD,MAAO,KAAP,CACD","sourcesContent":["const lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport function calcWinner(squares) {\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return null;\n}\n\nexport default function calcBestMove(squares, player) {\n  const getArrDuplicatedCount = (arr) => {\n    let count = 0;\n    arr.forEach((i) => {\n      if (squares[i] === player) {\n        count += 1;\n      }\n    });\n    return count;\n  };\n\n  const sortedLines = lines.sort((a, b) => {\n    let acount = getArrDuplicatedCount(a);\n    let bcount = getArrDuplicatedCount(b);\n    return bcount - acount;\n  });\n\n  for (let i = 0; i < sortedLines.length; i++) {\n    let val = sortedLines[i].find((el) => {\n      if (squares[el] === \"\") {\n        return el + \"\";\n      }\n      return null;\n    });\n\n    if (!val) {\n      continue;\n    }\n    return +val;\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}