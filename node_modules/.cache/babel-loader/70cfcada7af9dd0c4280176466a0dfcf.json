{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\BOUGRINE\\\\Desktop\\\\Tic tac Mo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _toConsumableArray from\"C:\\\\Users\\\\BOUGRINE\\\\Desktop\\\\Tic tac Mo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"C:\\\\Users\\\\BOUGRINE\\\\Desktop\\\\Tic tac Mo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{createContext,useEffect,useState,useContext}from\"react\";import calcBestMove,{calcWinner}from\"../helpers/calcSquares\";import{ModalContext}from\"./ModalContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var GameContext=/*#__PURE__*/createContext();var GameState=function GameState(props){var _useState=useState(\"start\"),_useState2=_slicedToArray(_useState,2),screen=_useState2[0],setScreen=_useState2[1];// start || game\nvar _useState3=useState(\"user\"),_useState4=_slicedToArray(_useState3,2),playMode=_useState4[0],setPlayMode=_useState4[1];// user || cpu\nvar _useState5=useState(\"x\"),_useState6=_slicedToArray(_useState5,2),activeUser=_useState6[0],setActiveUser=_useState6[1];// x || o\nvar _useState7=useState(new Array(9).fill(\"\")),_useState8=_slicedToArray(_useState7,2),squares=_useState8[0],setSquares=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),xnext=_useState10[0],setXnext=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),winner=_useState12[0],setWinner=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),winnerLine=_useState14[0],setWinnerLine=_useState14[1];var _useState15=useState({x:0,o:0}),_useState16=_slicedToArray(_useState15,2),ties=_useState16[0],setTies=_useState16[1];var _useContext=useContext(ModalContext),showModal=_useContext.showModal,hideModal=_useContext.hideModal,setModalMode=_useContext.setModalMode;useEffect(function(){//check if cpu turn\nvar currentUser=xnext?\"o\":\"x\";if(playMode===\"cpu\"&&currentUser!==activeUser&&!winner){cpuNextMove(squares);}checkNoWinner();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[xnext,winner,screen]);var handleStart=function handleStart(player){setPlayMode(player);setScreen(\"game\");};var handleSquareClick=function handleSquareClick(ix){if(squares[ix]||winner){return;}var currentUser=xnext?\"o\":\"x\";if(playMode===\"cpu\"&&currentUser!==activeUser){return;}var ns=_toConsumableArray(squares);ns[ix]=!xnext?\"x\":\"o\";setSquares(ns);setXnext(!xnext);checkWinner(ns);};var checkWinner=function checkWinner(ns){var isWinner=calcWinner(ns);if(isWinner){setWinner(isWinner.winner);setWinnerLine(isWinner.line);var nties=_objectSpread({},ties);nties[isWinner.winner]+=1;setTies(nties);showModal();setModalMode(\"winner\");}};var cpuNextMove=function cpuNextMove(sqrs){var bestmove=calcBestMove(sqrs,activeUser===\"x\"?\"o\":\"x\");var ns=_toConsumableArray(squares);ns[bestmove]=!xnext?\"x\":\"o\";setSquares(ns);setXnext(!xnext);checkWinner(ns);};var handleReset=function handleReset(){setSquares(new Array(9).fill(\"\"));setXnext(false);setWinner(null);setWinnerLine(null);setActiveUser(\"x\");setTies({x:0,o:0});hideModal();setScreen(\"start\");};var handleNextRound=function handleNextRound(){setSquares(new Array(9).fill(\"\"));setXnext(winner===\"x\");setWinner(null);setWinnerLine(null);hideModal();};var checkNoWinner=function checkNoWinner(){var moves=squares.filter(function(sq){return sq===\"\";});if(moves.length===0){setWinner(\"no\");showModal();setModalMode(\"winner\");}};return/*#__PURE__*/_jsx(GameContext.Provider,{value:{squares:squares,winner:winner,winnerLine:winnerLine,xnext:xnext,ties:ties,screen:screen,activeUser:activeUser,playMode:playMode,handleStart:handleStart,setActiveUser:setActiveUser,setPlayMode:setPlayMode,setTies:setTies,handleSquareClick:handleSquareClick,handleReset:handleReset,handleNextRound:handleNextRound},children:props.children});};export{GameContext,GameState};","map":{"version":3,"sources":["C:/Users/BOUGRINE/Desktop/Tic tac Mo/src/context/GameContex.js"],"names":["createContext","useEffect","useState","useContext","calcBestMove","calcWinner","ModalContext","GameContext","GameState","props","screen","setScreen","playMode","setPlayMode","activeUser","setActiveUser","Array","fill","squares","setSquares","xnext","setXnext","winner","setWinner","winnerLine","setWinnerLine","x","o","ties","setTies","showModal","hideModal","setModalMode","currentUser","cpuNextMove","checkNoWinner","handleStart","player","handleSquareClick","ix","ns","checkWinner","isWinner","line","nties","sqrs","bestmove","handleReset","handleNextRound","moves","filter","sq","length","children"],"mappings":"mZAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,YAAP,EAAuBC,UAAvB,KAAyC,wBAAzC,CACA,OAASC,YAAT,KAA6B,gBAA7B,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGP,aAAa,EAAjC,CAEA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,cAA4BP,QAAQ,CAAC,OAAD,CAApC,wCAAOQ,MAAP,eAAeC,SAAf,eAA+C;AAC/C,eAAgCT,QAAQ,CAAC,MAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAAkD;AAClD,eAAoCX,QAAQ,CAAC,GAAD,CAA5C,yCAAOY,UAAP,eAAmBC,aAAnB,eAAmD;AACnD,eAA8Bb,QAAQ,CAAC,GAAIc,CAAAA,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,CAAD,CAAtC,yCAAOC,OAAP,eAAgBC,UAAhB,eACA,eAA0BjB,QAAQ,CAAC,KAAD,CAAlC,0CAAOkB,KAAP,gBAAcC,QAAd,gBACA,gBAA4BnB,QAAQ,CAAC,IAAD,CAApC,2CAAOoB,MAAP,gBAAeC,SAAf,gBACA,gBAAoCrB,QAAQ,CAAC,IAAD,CAA5C,2CAAOsB,UAAP,gBAAmBC,aAAnB,gBACA,gBAAwBvB,QAAQ,CAAC,CAAEwB,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAD,CAAhC,2CAAOC,IAAP,gBAAaC,OAAb,gBAEA,gBAA+C1B,UAAU,CAACG,YAAD,CAAzD,CAAQwB,SAAR,aAAQA,SAAR,CAAmBC,SAAnB,aAAmBA,SAAnB,CAA8BC,YAA9B,aAA8BA,YAA9B,CAEA/B,SAAS,CAAC,UAAM,CACd;AACA,GAAIgC,CAAAA,WAAW,CAAGb,KAAK,CAAG,GAAH,CAAS,GAAhC,CACA,GAAIR,QAAQ,GAAK,KAAb,EAAsBqB,WAAW,GAAKnB,UAAtC,EAAoD,CAACQ,MAAzD,CAAiE,CAC/DY,WAAW,CAAChB,OAAD,CAAX,CACD,CACDiB,aAAa,GACb;AACD,CARQ,CAQN,CAACf,KAAD,CAAQE,MAAR,CAAgBZ,MAAhB,CARM,CAAT,CAUA,GAAM0B,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9BxB,WAAW,CAACwB,MAAD,CAAX,CACA1B,SAAS,CAAC,MAAD,CAAT,CACD,CAHD,CAKA,GAAM2B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,EAAD,CAAQ,CAChC,GAAIrB,OAAO,CAACqB,EAAD,CAAP,EAAejB,MAAnB,CAA2B,CACzB,OACD,CACD,GAAIW,CAAAA,WAAW,CAAGb,KAAK,CAAG,GAAH,CAAS,GAAhC,CACA,GAAIR,QAAQ,GAAK,KAAb,EAAsBqB,WAAW,GAAKnB,UAA1C,CAAsD,CACpD,OACD,CACD,GAAI0B,CAAAA,EAAE,oBAAOtB,OAAP,CAAN,CACAsB,EAAE,CAACD,EAAD,CAAF,CAAS,CAACnB,KAAD,CAAS,GAAT,CAAe,GAAxB,CACAD,UAAU,CAACqB,EAAD,CAAV,CACAnB,QAAQ,CAAC,CAACD,KAAF,CAAR,CACAqB,WAAW,CAACD,EAAD,CAAX,CACD,CAbD,CAeA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACD,EAAD,CAAQ,CAC1B,GAAME,CAAAA,QAAQ,CAAGrC,UAAU,CAACmC,EAAD,CAA3B,CACA,GAAIE,QAAJ,CAAc,CACZnB,SAAS,CAACmB,QAAQ,CAACpB,MAAV,CAAT,CACAG,aAAa,CAACiB,QAAQ,CAACC,IAAV,CAAb,CACA,GAAMC,CAAAA,KAAK,kBAAQhB,IAAR,CAAX,CACAgB,KAAK,CAACF,QAAQ,CAACpB,MAAV,CAAL,EAA0B,CAA1B,CACAO,OAAO,CAACe,KAAD,CAAP,CACAd,SAAS,GACTE,YAAY,CAAC,QAAD,CAAZ,CACD,CACF,CAXD,CAaA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACW,IAAD,CAAU,CAC5B,GAAIC,CAAAA,QAAQ,CAAG1C,YAAY,CAACyC,IAAD,CAAO/B,UAAU,GAAK,GAAf,CAAqB,GAArB,CAA2B,GAAlC,CAA3B,CACA,GAAI0B,CAAAA,EAAE,oBAAOtB,OAAP,CAAN,CACAsB,EAAE,CAACM,QAAD,CAAF,CAAe,CAAC1B,KAAD,CAAS,GAAT,CAAe,GAA9B,CACAD,UAAU,CAACqB,EAAD,CAAV,CACAnB,QAAQ,CAAC,CAACD,KAAF,CAAR,CACAqB,WAAW,CAACD,EAAD,CAAX,CACD,CAPD,CASA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB5B,UAAU,CAAC,GAAIH,CAAAA,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,CAAD,CAAV,CACAI,QAAQ,CAAC,KAAD,CAAR,CACAE,SAAS,CAAC,IAAD,CAAT,CACAE,aAAa,CAAC,IAAD,CAAb,CACAV,aAAa,CAAC,GAAD,CAAb,CACAc,OAAO,CAAC,CAAEH,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAD,CAAP,CACAI,SAAS,GACTpB,SAAS,CAAC,OAAD,CAAT,CACD,CATD,CAWA,GAAMqC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B7B,UAAU,CAAC,GAAIH,CAAAA,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,CAAD,CAAV,CACAI,QAAQ,CAACC,MAAM,GAAK,GAAZ,CAAR,CACAC,SAAS,CAAC,IAAD,CAAT,CACAE,aAAa,CAAC,IAAD,CAAb,CACAM,SAAS,GACV,CAND,CAQA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMc,CAAAA,KAAK,CAAG/B,OAAO,CAACgC,MAAR,CAAe,SAACC,EAAD,QAAQA,CAAAA,EAAE,GAAK,EAAf,EAAf,CAAd,CACA,GAAIF,KAAK,CAACG,MAAN,GAAiB,CAArB,CAAwB,CACtB7B,SAAS,CAAC,IAAD,CAAT,CACAO,SAAS,GACTE,YAAY,CAAC,QAAD,CAAZ,CACD,CACF,CAPD,CASA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLd,OAAO,CAAPA,OADK,CAELI,MAAM,CAANA,MAFK,CAGLE,UAAU,CAAVA,UAHK,CAILJ,KAAK,CAALA,KAJK,CAKLQ,IAAI,CAAJA,IALK,CAMLlB,MAAM,CAANA,MANK,CAOLI,UAAU,CAAVA,UAPK,CAQLF,QAAQ,CAARA,QARK,CASLwB,WAAW,CAAXA,WATK,CAULrB,aAAa,CAAbA,aAVK,CAWLF,WAAW,CAAXA,WAXK,CAYLgB,OAAO,CAAPA,OAZK,CAaLS,iBAAiB,CAAjBA,iBAbK,CAcLS,WAAW,CAAXA,WAdK,CAeLC,eAAe,CAAfA,eAfK,CADT,UAmBGvC,KAAK,CAAC4C,QAnBT,EADF,CAuBD,CAnHD,CAqHA,OAAS9C,WAAT,CAAsBC,SAAtB","sourcesContent":["import { createContext, useEffect, useState, useContext } from \"react\";\nimport calcBestMove, { calcWinner } from \"../helpers/calcSquares\";\nimport { ModalContext } from \"./ModalContext\";\n\nconst GameContext = createContext();\n\nconst GameState = (props) => {\n  const [screen, setScreen] = useState(\"start\"); // start || game\n  const [playMode, setPlayMode] = useState(\"user\"); // user || cpu\n  const [activeUser, setActiveUser] = useState(\"x\"); // x || o\n  const [squares, setSquares] = useState(new Array(9).fill(\"\"));\n  const [xnext, setXnext] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [winnerLine, setWinnerLine] = useState(null);\n  const [ties, setTies] = useState({ x: 0, o: 0 });\n\n  const { showModal, hideModal, setModalMode } = useContext(ModalContext);\n\n  useEffect(() => {\n    //check if cpu turn\n    let currentUser = xnext ? \"o\" : \"x\";\n    if (playMode === \"cpu\" && currentUser !== activeUser && !winner) {\n      cpuNextMove(squares);\n    }\n    checkNoWinner();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [xnext, winner, screen]);\n\n  const handleStart = (player) => {\n    setPlayMode(player);\n    setScreen(\"game\");\n  };\n\n  const handleSquareClick = (ix) => {\n    if (squares[ix] || winner) {\n      return;\n    }\n    let currentUser = xnext ? \"o\" : \"x\";\n    if (playMode === \"cpu\" && currentUser !== activeUser) {\n      return;\n    }\n    let ns = [...squares];\n    ns[ix] = !xnext ? \"x\" : \"o\";\n    setSquares(ns);\n    setXnext(!xnext);\n    checkWinner(ns);\n  };\n\n  const checkWinner = (ns) => {\n    const isWinner = calcWinner(ns);\n    if (isWinner) {\n      setWinner(isWinner.winner);\n      setWinnerLine(isWinner.line);\n      const nties = { ...ties };\n      nties[isWinner.winner] += 1;\n      setTies(nties);\n      showModal();\n      setModalMode(\"winner\");\n    }\n  };\n\n  const cpuNextMove = (sqrs) => {\n    let bestmove = calcBestMove(sqrs, activeUser === \"x\" ? \"o\" : \"x\");\n    let ns = [...squares];\n    ns[bestmove] = !xnext ? \"x\" : \"o\";\n    setSquares(ns);\n    setXnext(!xnext);\n    checkWinner(ns);\n  };\n\n  const handleReset = () => {\n    setSquares(new Array(9).fill(\"\"));\n    setXnext(false);\n    setWinner(null);\n    setWinnerLine(null);\n    setActiveUser(\"x\");\n    setTies({ x: 0, o: 0 });\n    hideModal();\n    setScreen(\"start\");\n  };\n\n  const handleNextRound = () => {\n    setSquares(new Array(9).fill(\"\"));\n    setXnext(winner === \"x\");\n    setWinner(null);\n    setWinnerLine(null);\n    hideModal();\n  };\n\n  const checkNoWinner = () => {\n    const moves = squares.filter((sq) => sq === \"\");\n    if (moves.length === 0) {\n      setWinner(\"no\");\n      showModal();\n      setModalMode(\"winner\");\n    }\n  };\n\n  return (\n    <GameContext.Provider\n      value={{\n        squares,\n        winner,\n        winnerLine,\n        xnext,\n        ties,\n        screen,\n        activeUser,\n        playMode,\n        handleStart,\n        setActiveUser,\n        setPlayMode,\n        setTies,\n        handleSquareClick,\n        handleReset,\n        handleNextRound,\n      }}\n    >\n      {props.children}\n    </GameContext.Provider>\n  );\n};\n\nexport { GameContext, GameState };\n"]},"metadata":{},"sourceType":"module"}