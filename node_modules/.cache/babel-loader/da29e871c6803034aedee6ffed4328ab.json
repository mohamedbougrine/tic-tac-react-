{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BOUGRINE\\\\Desktop\\\\Tic tac Mo\\\\src\\\\context\\\\ModalContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\n\nconst ModalState = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [mode, setMode] = useState(\"winner\"); // start || winner\n\n  const showModal = () => setShow(true);\n\n  const hideModal = () => setShow(false);\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      show,\n      modaleModel: mode,\n      showModal,\n      hideModal,\n      setModalMode: setMode\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalState, \"tBHbEcHq0I/NIveuRsYe4R9Gbls=\");\n\n_c = ModalState;\nexport { ModalContext, ModalState };\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalState\");","map":{"version":3,"sources":["C:/Users/BOUGRINE/Desktop/Tic tac Mo/src/context/ModalContext.js"],"names":["createContext","useState","ModalContext","ModalState","props","show","setShow","mode","setMode","showModal","hideModal","modaleModel","setModalMode","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAEA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,QAAD,CAAhC,CAF4B,CAEgB;;AAE5C,QAAMQ,SAAS,GAAG,MAAMH,OAAO,CAAC,IAAD,CAA/B;;AACA,QAAMI,SAAS,GAAG,MAAMJ,OAAO,CAAC,KAAD,CAA/B;;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IADK;AAELM,MAAAA,WAAW,EAAEJ,IAFR;AAGLE,MAAAA,SAHK;AAILC,MAAAA,SAJK;AAKLE,MAAAA,YAAY,EAAEJ;AALT,KADT;AAAA,cASGJ,KAAK,CAACS;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApBD;;GAAMV,U;;KAAAA,U;AAsBN,SAASD,YAAT,EAAuBC,UAAvB","sourcesContent":["import { createContext, useState } from \"react\";\n\nconst ModalContext = createContext();\n\nconst ModalState = (props) => {\n  const [show, setShow] = useState(false);\n  const [mode, setMode] = useState(\"winner\"); // start || winner\n\n  const showModal = () => setShow(true);\n  const hideModal = () => setShow(false);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        show,\n        modaleModel: mode,\n        showModal,\n        hideModal,\n        setModalMode: setMode,\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport { ModalContext, ModalState };\n"]},"metadata":{},"sourceType":"module"}